#!/usr/bin/ruby -w
# PART 8

# The group_by method is similar to partition method
# except it returns a hash:
a = (1..20).to_a                                                   # => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
hash = a.group_by { |x| x.odd? }                                   # => {true=>[1, 3, 5, 7, 9, 11, 13, 15, 17, 19], false=>[2, 4, 6, 8, 10, 12, 14, 16, 18, 20]}
odd, even = hash[true], hash[false]                                # => [[1, 3, 5, 7, 9, 11, 13, 15, 17, 19], [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]]
p odd                                                              # => [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
p even                                                             # => [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]

odd, even = a.group_by(&:odd?).then { |x| [x[true], x[false]] }    # => [[1, 3, 5, 7, 9, 11, 13, 15, 17, 19], [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]]
p odd                                                              # => [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
p even                                                             # => [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]

ary = 10, 20, 770, 49, 550, 13, 200, 40, 36                        # => [10, 20, 770, 49, 550, 13, 200, 40, 36]
p ary.group_by { |x| x.gcd(40) }                                   # => {10=>[10, 770, 550], 20=>[20], 1=>[49, 13], 40=>[200, 40], 4=>[36]}
